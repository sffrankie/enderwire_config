# The following status macros are available (these go inside of your macros):
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#
# With additional macros for basic control:
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(90)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    # Heat bed for probing
    STATUS_HEATING
    PROBE_EDDY_NG_PROBE_STATIC
    M190 S{BED_TEMP}
    # Home the printer
    STATUS_HOMING
    ADAPTIVE_DRIVE_CURRENT
    G28
    STATUS_CLEANING
    clean_nozzle
    G0 X110 Y101.3 F6000
    PROBE_EDDY_NG_PROBE_STATIC
    STATUS_CALIBRATING_Z
    PROBE_EDDY_NG_TAP
    # If you are generating a new bed mesh:
    STATUS_MESHING
    EDDYNG_BED_MESH_EXPERIMENTAL
    #SMART_PARK
    # Set and wait for nozzle to reach printing temperature
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP}
    # Start printing!
    STATUS_CLEANING
    clean_nozzle
    STATUS_PRINTING
    VORON_PURGE
    
# Enable exclude_object for adaptive meshing
[exclude_object]
   
[gcode_macro OLD_END_PRINT]
description: "G-code to run at the end of a print. Replace your slicer's end G-code with this"

gcode:
    STATUS_COOLING
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-8.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    M117 Finished!

  STATUS_PART_READY
  M84 X Y E ;Disable all steppers but Z
  PROBE_EDDY_NG_SET_TAP_OFFSET VALUE=0
  BED_MESH_CLEAR

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
       G28
    {% endif %}


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_SLOW
gcode: 
      STATUS_MESHING
      EDDYNG_BED_MESH_EXPERIMENTAL
      STATUS_READY

[gcode_macro PRINT_END]
gcode:
    {% set z = params.Z|default(1)|int %}   ; z hop amount

    M400                             ; wait for buffer to clear
    G91                              ; !relative positioning
    G1 E-0.2 F{30 * 60} 
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
        G1 Z{z} F900                                                                     ; raise Z up by z hop amount
    {% endif %}
    G90                              ; absolute positioning

    _beep_done
    SMART_PARK
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan

    M400                             ; Finish Moves
    M221 S100                        ; reset flow to 100%
    M220 S100                        ; reset speed to 100%

    M117 Finished!
    STATUS_READY
