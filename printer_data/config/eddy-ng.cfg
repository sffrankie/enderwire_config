################################################
#------EDDY PROBE/LEVELING------
################################################
#[include adaptive_drive_current.cfg]

[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
i2c_mcu: eddy  
i2c_bus: i2c0f 
x_offset: 0
y_offset: 16.2
#tap_drive_current: 18
tap_target_z: -0.350
#reg_drive_current: 17
#tap_threshold: 350
write_tap_plot: true


[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

[homing_override]
gcode:
  # Move 5 up, just in case (this is our safety zhop, this needs 'set_position_z: 0' below)
  G91 ; set relative positioning
  G0 Z5 F1000 ; 5 up zhop
  {% if not rawparams or 'Y' in rawparams %}
    {action_respond_info('Homing Y')}
    G28 Y
    G90 ; set absolute positioning
    G0 Y125 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'X' in rawparams %}
    {action_respond_info('Homing X')}
    G28 X
    G90 ; set absolute positioning
    G0 X110 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
   {% if not rawparams or 'Z' in rawparams %}
    {action_respond_info('Homing Z')}
    G90 ; set absolute positioning
    G0 X110 Y125 F6000 ; return to center, please add your offsets manually if you want to
    G28 Z
    G0 Z2 F1000
    G4 S1
    M400
    PROBE_EDDY_NG_PROBE_STATIC HOME_Z=1
    G0 Z5 F1000 ; to 5mm as home
  {% endif %}
  G90 ; set absolute positioning
axes: xyz
set_position_z: 0 # This forces the z position to be at 0 when we start homing, so we can move the Z up before homing.


[bed_mesh]
horizontal_move_z: 2
speed: 200
mesh_min: 15, 60  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 205, 255 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 9, 9
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

[gcode_macro EDDY_TEMPERATURE_PROBE]
description: 
gcode:
  {% if printer['temperature_sensor btt_eddy'].temperature|float > 58 %}
    SET_DISPLAY_TEXT MSG="Tapping DC: 18"
    PROBE_EDDY_NG_TAP DRIVE_CURRENT=18
  {% else %}
    SET_DISPLAY_TEXT MSG="Tapping DC: 17"
    PROBE_EDDY_NG_TAP DRIVE_CURRENT=17
  {% endif %}

[gcode_macro SET_EDDY_CURR_TEMP]
gcode:
  {% if printer['temperature_sensor btt_eddy'].temperature|float > 70 %}
    SET_DISPLAY_TEXT MSG="Homing DC: 17"
    LDC_NG_SET_DRIVE_CURRENT chip=btt_eddy val=17
  {% else %}
    SET_DISPLAY_TEXT MSG="Homing DC: 16"
    LDC_NG_SET_DRIVE_CURRENT chip=btt_eddy val=16
  {% endif %}